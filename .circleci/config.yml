version: 2.1
jobs: 
  build-and-test:
    docker:
      - image: mhart/alpine-node
    working_directory: ~/repo/lisk-dex-electron  
    steps:
      - checkout:  
           path: ~/repo
      - run:
          name: Build and Test project
          command: |
            set +e
            npm install
            npm run build     
            npm run lint
            npm test

  win-linux:
    docker:
      - image: electronuserland/builder:wine
    working_directory: ~/repo/lisk-dex-electron  
    steps:
      - checkout:  
           path: ~/repo
      - run:
          name: Build project
          command: |
            set +e
            npm install     
            npm run build
      - run:
          name: Create Build Artifact 
          command: |
            set +e
            npm run multi-dist
            ci-scripts/artifacts-isolator.sh
      - store_artifacts:  
          path: ~/repo/lisk-dex-electron/dist/artifacts
          destination: artifacts

  mac:
    macos:
      xcode: 11.3.0
    working_directory: ~/repo/lisk-dex-electron  
    steps:
      - checkout:  
            path: ~/repo
      - run:
          name: Install node@v12.17.0
          command: |
            set +e
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            nvm install v12.17.0
            nvm alias default v12.17.0
            rm -rf ~./node-gyp
            node -v
      - run:
          name: Build project
          command: |
            set +e
            npm install    
            npm run build
      - run:
          name: Create Build Artifact 
          command: |
            set +e
            npm run dist
            ci-scripts/artifacts-isolator.sh
      - store_artifacts:  
          path: ~/repo/lisk-dex-electron/dist/artifacts
          destination: artifacts          
          
workflows:
    test-and-deploy:
      jobs:
        - build-and-test
        - hold:
            type: approval
            requires:
              - build-and-test
        - win-linux:
            requires:
              - hold
        - mac:
            requires:
              - hold
